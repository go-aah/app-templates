// aah application initialization - configuration, server extensions, middleware's, etc.
// Customize it per application use case.

package main

import (
	"aahframe.work"{{ if .App.IsSecurityEnabled }}
	
	"{{ .App.ImportPath }}/app/security"{{ end }}{{ if .App.IsWebApp }}

	// Registering HTML minifier
	_ "aahframe.work/minify/html"{{ end }}
)

func init() {
	app := aah.App()

	//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
	// Server Extensions
	// Doc: https://docs.aahframework.org/server-extension.html
	//__________________________________________________________________________

	// Event: OnStart
	// Doc: https://docs.aahframework.org/server-extension.html#event-onstart
	//
	// app.OnStart(db.Connect)
	// app.OnStart(cache.Load){{ if or .App.IsWebApp .App.IsAPIApp }}
	app.OnStart(SubscribeHTTPEvents){{ end }}{{ if or .App.IsWebSocketApp .App.IsSubTypeWebSocket }}
	app.OnStart(SubscribeWebSocketEvents){{ end }}

	{{ if not .App.IsWebSocketApp }}//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
	// Middleware's
	// Doc: https://docs.aahframework.org/middleware.html
	//
	// Executed in the order they are defined. It is recommended; NOT to change
	// the order of pre-defined aah framework middleware's.
	//__________________________________________________________________________
	app.HTTPEngine().Middlewares(
		aah.RouteMiddleware,
		aah.CORSMiddleware,
		aah.BindMiddleware,{{ if .App.IsWebApp }}
		aah.AntiCSRFMiddleware,{{ end }}
		aah.AuthcAuthzMiddleware,

		//
		// NOTE: Register your Custom middleware's right here
		//

		aah.ActionMiddleware,
	)

	//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
	// Add Application Error Handler
	// Doc: https://docs.aahframework.org/error-handling.html
	//__________________________________________________________________________
	// app.SetErrorHandler(AppErrorHandler){{ end }}{{ if .App.IsWebApp }}

	//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
	// Add Custom Template Functions
	// Doc: https://docs.aahframework.org/template-funcs.html
	//__________________________________________________________________________
	// app.AddTemplateFunc(template.FuncMap{
	// // ...
	// })

	//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
	// Add Custom Session Store
	// Doc: https://docs.aahframework.org/session.html
	//__________________________________________________________________________
	// app.AddSessionStore("redis", &RedisSessionStore{})

	{{ end }}//‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
	// Add Custom Value Parser
	// Doc: https://docs.aahframework.org/request-parameters-auto-bind.html
	//__________________________________________________________________________
	// if err := app.AddValueParser(reflect.TypeOf(CustomType{}), customParser); err != nil {
	//   log.Error(err)
	// }
}{{ if or .App.IsWebApp .App.IsAPIApp }}

// SubscribeHTTPEvents method subscribes to HTTP events on app start.
//
// Doc: https://docs.aahframework.org/server-extension.html
func SubscribeHTTPEvents(_ *aah.Event) {
	{{ if not .App.IsSecurityEnabled }}//{{ end }} he := aah.App().HTTPEngine()
	// he.OnRequest(myserverext.OnRequest)
	// he.OnPreReply(myserverext.OnPreReply)
	// he.OnHeaderReply(myserverext.OnHeaderReply)
	// he.OnPostReply(myserverext.OnPostReply)
	// he.OnPreAuth(myserverext.OnPreAuth){{ if .App.IsSecurityEnabled }}
	he.OnPostAuth(security.PostAuthEvent){{ else }}
	// he.OnPostAuth(myserverext.PostAuthEvent){{ end }}
}
{{ end }}{{ if or .App.IsWebSocketApp .App.IsSubTypeWebSocket }}

// SubscribeWebSocketEvents method subscribes to WebSocket events on app start.
//
// Doc: https://docs.aahframework.org/websocket.html#events
func SubscribeWebSocketEvents(_ *aah.Event) {
  // wse := aah.App().WSEngine()
  // wse.OnPreConnect(mywebsockets.HandleEvents)
  // wse.OnPostConnect(mywebsockets.HandleEvents)
  // wse.OnPostDisconnect(mywebsockets.HandleEvents)
  // wse.OnError(mywebsockets.HandleEvents)

  // Custom ID Generator
  // wse.SetIDGenerator(websockets.MyCustomIDGenerator)
}{{ end }}
