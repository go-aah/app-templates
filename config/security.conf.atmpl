######################################################
# {{ .AppName }} - Application Security Configuration
#
# Complete routes configuration reference:
#   https://docs.aahframework.org/security-config.html
######################################################

security {
  {{ if eq .AppSessionScope "stateful" -}}
  # -----------------------------------------------------------------------
  # Session configuration
  # HTTP state management across multiple requests.
  # Doc: https://docs.aahframework.org/security-config.html#section-session
  # -----------------------------------------------------------------------
  session {
    # Session mode to choose whether HTTP session should be persisted or
    # destroyed at the end of the request. Supported values are `stateless`
    # and `stateful`.
    # Default value is `stateless` for API and `stateful` for Web app.
    mode = "{{ .AppSessionScope }}"

    # Session store is to choose where session value should be persisted.
    store {
      # Currently aah framework supports `cookie` and `file` as store type.
      # Also framework provide extensible `session.Storer` interface to
      # add custom session store.
      # Default value is `cookie`.
      type = "{{ .AppSessionStore }}"

      {{ if eq .AppSessionStore "file" -}}
      # Filepath is used for file store to store session file in the file system.
      # This is only applicable for `type = "file"`, make sure application has
      # Read/Write access to the directory. Provide absolute path.
      filepath = "{{ .AppSessionFileStorePath }}"
      {{- end }}
    }

    # Session ID length
    # Default value is `32`.
    #id_length = 32

    # Time-to-live for session data. Valid time units are "m = minutes",
    # "h = hours" and 0.
    # Default value is `0`, cookie is deleted when the browser is closed.
    #ttl = "0"

    # Session cookie name prefix.
    # Default value is `aah` For e.g.: `aah_session`
    #prefix = "aah"

    # Default value is `empty` string.
    #domain = ""

    # Default value is `/`.
    #path = "/"

    # HTTP session cookie HTTPOnly value. This option prevents XSS
    # (Cross Site Scripting) attacks.
    # Default value is `true`.
    #http_only = true

    # HTTP session cookie secure value.
    # However if aah server is not configured with SSL then
    # framework sets this value as false
    # Default value is `true`.
    #secure = true

    # HTTP session cookie value signing using `HMAC`. For server farm this
    # should be same in all instance. For HMAC sign & verify it recommend to use
    # key size is `32` or `64` bytes.
    # Default value is `64` bytes (generated when application gets created
    # using `aah new` command).
    sign_key = "{{ .AppSessionSignKey }}"

    # HTTP session cookie value encryption and decryption using `AES`. For server
    # farm this should be same in all instance. AES algorithm is used, valid
    # lengths are `16`, `24`, or `32` bytes to select `AES-128`, `AES-192`, or `AES-256`.
    # Default value is `32` bytes (generated when application gets created
    # using `aah new` command).
    enc_key = "{{ .AppSessionEncKey }}"

    # Cleanup Interval is used to clean the expired session objects from store.
    # This is only applicable for non-cookie store type.
    # Cleanup performed in dedicated goroutine. Valid time units are
    # `m -> minutes`, `h -> hours`.
    # Default value is `30m`.
    #cleanup_interval = "30m"
  }
  {{- end }}
}
